{"ast":null,"code":"/**\n * DETALJERAT LOGGSYSTEM FÖR FOOD2GUIDE\n * \n * Detta system loggar ALLT som händer i applikationen\n * och visar det både i webbläsarkonsolen och i UI:t\n */\n\nclass Logger {\n  constructor() {\n    this.logs = [];\n    this.listeners = [];\n    this.isEnabled = true;\n\n    // Kör konsol-meddelande vid start\n    this.info('🚀 FOOD2GUIDE LOGGER STARTAD - All aktivitet kommer att loggas här');\n    this.info('💡 Öppna webbläsarkonsolen (F12) för att se ALLA loggar');\n\n    // Logga när sidan laddas\n    this.info(`📱 Sida laddad: ${window.location.href}`);\n    this.info(`🌐 User Agent: ${navigator.userAgent}`);\n    this.info(`⏰ Tid: ${new Date().toLocaleString('sv-SE')}`);\n  }\n\n  // Lägg till lyssnare för logguppdateringar\n  addListener(callback) {\n    this.listeners.push(callback);\n  }\n\n  // Ta bort lyssnare\n  removeListener(callback) {\n    this.listeners = this.listeners.filter(l => l !== callback);\n  }\n\n  // Meddela alla lyssnare om nya loggar\n  notifyListeners() {\n    this.listeners.forEach(callback => {\n      try {\n        callback([...this.logs]);\n      } catch (error) {\n        console.error('Logger listener error:', error);\n      }\n    });\n  }\n\n  // Skapa en loggpost\n  createLogEntry(level, message) {\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const timestamp = new Date().toISOString();\n    const timeFormatted = new Date().toLocaleTimeString('sv-SE');\n    const logEntry = {\n      id: Date.now() + Math.random(),\n      timestamp,\n      timeFormatted,\n      level,\n      message,\n      data,\n      stack: level === 'error' ? new Error().stack : null\n    };\n    this.logs.push(logEntry);\n\n    // Begränsa antal loggar i minnet\n    if (this.logs.length > 1000) {\n      this.logs = this.logs.slice(-500);\n    }\n    this.notifyListeners();\n    return logEntry;\n  }\n\n  // INFO-loggar (blå)\n  info(message) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const entry = this.createLogEntry('info', message, data);\n    console.log(`🔵 [${entry.timeFormatted}] INFO: ${message}`, data || '');\n    return entry;\n  }\n\n  // SUCCESS-loggar (grön)\n  success(message) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const entry = this.createLogEntry('success', message, data);\n    console.log(`🟢 [${entry.timeFormatted}] SUCCESS: ${message}`, data || '');\n    return entry;\n  }\n\n  // WARNING-loggar (gul)\n  warn(message) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const entry = this.createLogEntry('warning', message, data);\n    console.warn(`🟡 [${entry.timeFormatted}] WARNING: ${message}`, data || '');\n    return entry;\n  }\n\n  // ERROR-loggar (röd)\n  error(message) {\n    let error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const entry = this.createLogEntry('error', message, {\n      error,\n      data\n    });\n    console.error(`🔴 [${entry.timeFormatted}] ERROR: ${message}`, error || '', data || '');\n    return entry;\n  }\n\n  // DEBUG-loggar (grå)\n  debug(message) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const entry = this.createLogEntry('debug', message, data);\n    console.log(`⚪ [${entry.timeFormatted}] DEBUG: ${message}`, data || '');\n    return entry;\n  }\n\n  // API-anrop loggar\n  apiCall(method, url) {\n    let requestData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const entry = this.createLogEntry('api', `${method} ${url}`, requestData);\n    console.log(`📡 [${entry.timeFormatted}] API CALL: ${method} ${url}`, requestData || '');\n    return entry;\n  }\n\n  // API-svar loggar\n  apiResponse(method, url, status) {\n    let responseData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let error = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    const level = status >= 400 ? 'error' : status >= 300 ? 'warning' : 'success';\n    const emoji = status >= 400 ? '❌' : status >= 300 ? '⚠️' : '✅';\n    const entry = this.createLogEntry(level, `${method} ${url} → ${status}`, {\n      responseData,\n      error\n    });\n    if (error) {\n      console.error(`${emoji} [${entry.timeFormatted}] API ERROR: ${method} ${url} → ${status}`, error, responseData || '');\n    } else {\n      console.log(`${emoji} [${entry.timeFormatted}] API RESPONSE: ${method} ${url} → ${status}`, responseData || '');\n    }\n    return entry;\n  }\n\n  // Event-loggar\n  event(eventName) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const entry = this.createLogEntry('event', `EVENT: ${eventName}`, data);\n    console.log(`⚡ [${entry.timeFormatted}] EVENT: ${eventName}`, data || '');\n    return entry;\n  }\n\n  // State-ändringar\n  stateChange(component, oldState, newState) {\n    const entry = this.createLogEntry('state', `STATE CHANGE: ${component}`, {\n      oldState,\n      newState\n    });\n    console.log(`🔄 [${entry.timeFormatted}] STATE CHANGE: ${component}`, {\n      oldState,\n      newState\n    });\n    return entry;\n  }\n\n  // Streaming-loggar\n  stream(message) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const entry = this.createLogEntry('stream', message, data);\n    console.log(`🌊 [${entry.timeFormatted}] STREAM: ${message}`, data || '');\n    return entry;\n  }\n\n  // Performance-loggar\n  performance(operation, duration) {\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const entry = this.createLogEntry('performance', `${operation} took ${duration}ms`, data);\n    console.log(`⏱️ [${entry.timeFormatted}] PERFORMANCE: ${operation} took ${duration}ms`, data || '');\n    return entry;\n  }\n\n  // Rensa alla loggar\n  clear() {\n    this.logs = [];\n    this.notifyListeners();\n    console.clear();\n    this.info('🧹 Loggar rensade');\n  }\n\n  // Hämta alla loggar\n  getAllLogs() {\n    return [...this.logs];\n  }\n\n  // Hämta loggar efter level\n  getLogsByLevel(level) {\n    return this.logs.filter(log => log.level === level);\n  }\n\n  // Exportera loggar som JSON\n  exportLogs() {\n    const logsJson = JSON.stringify(this.logs, null, 2);\n    const blob = new Blob([logsJson], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `food2guide-logs-${new Date().toISOString().slice(0, 19)}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    this.info('📥 Loggar exporterade till fil');\n  }\n\n  // Aktivera/inaktivera loggning\n  setEnabled(enabled) {\n    this.isEnabled = enabled;\n    this.info(`🔧 Loggning ${enabled ? 'aktiverad' : 'inaktiverad'}`);\n  }\n}\n\n// Skapa global logger-instans\nconst logger = new Logger();\n\n// Fånga alla ohanterade fel\nwindow.addEventListener('error', event => {\n  logger.error('Ohanterat fel', event.error, {\n    message: event.message,\n    filename: event.filename,\n    lineno: event.lineno,\n    colno: event.colno\n  });\n});\n\n// Fånga alla ohanterade promise-fel\nwindow.addEventListener('unhandledrejection', event => {\n  logger.error('Ohanterat Promise-fel', event.reason);\n});\n\n// Logga när sidan lämnas\nwindow.addEventListener('beforeunload', () => {\n  logger.info('👋 Sida lämnas');\n});\n\n// Exportera logger\nexport default logger;","map":{"version":3,"names":["Logger","constructor","logs","listeners","isEnabled","info","window","location","href","navigator","userAgent","Date","toLocaleString","addListener","callback","push","removeListener","filter","l","notifyListeners","forEach","error","console","createLogEntry","level","message","data","arguments","length","undefined","timestamp","toISOString","timeFormatted","toLocaleTimeString","logEntry","id","now","Math","random","stack","Error","slice","entry","log","success","warn","debug","apiCall","method","url","requestData","apiResponse","status","responseData","emoji","event","eventName","stateChange","component","oldState","newState","stream","performance","operation","duration","clear","getAllLogs","getLogsByLevel","exportLogs","logsJson","JSON","stringify","blob","Blob","type","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","setEnabled","enabled","logger","addEventListener","filename","lineno","colno","reason"],"sources":["/Users/henrikpetersson/Desktop/Webbprojekt/makeiteasy/src/Logger.js"],"sourcesContent":["/**\n * DETALJERAT LOGGSYSTEM FÖR FOOD2GUIDE\n * \n * Detta system loggar ALLT som händer i applikationen\n * och visar det både i webbläsarkonsolen och i UI:t\n */\n\nclass Logger {\n  constructor() {\n    this.logs = [];\n    this.listeners = [];\n    this.isEnabled = true;\n    \n    // Kör konsol-meddelande vid start\n    this.info('🚀 FOOD2GUIDE LOGGER STARTAD - All aktivitet kommer att loggas här');\n    this.info('💡 Öppna webbläsarkonsolen (F12) för att se ALLA loggar');\n    \n    // Logga när sidan laddas\n    this.info(`📱 Sida laddad: ${window.location.href}`);\n    this.info(`🌐 User Agent: ${navigator.userAgent}`);\n    this.info(`⏰ Tid: ${new Date().toLocaleString('sv-SE')}`);\n  }\n\n  // Lägg till lyssnare för logguppdateringar\n  addListener(callback) {\n    this.listeners.push(callback);\n  }\n\n  // Ta bort lyssnare\n  removeListener(callback) {\n    this.listeners = this.listeners.filter(l => l !== callback);\n  }\n\n  // Meddela alla lyssnare om nya loggar\n  notifyListeners() {\n    this.listeners.forEach(callback => {\n      try {\n        callback([...this.logs]);\n      } catch (error) {\n        console.error('Logger listener error:', error);\n      }\n    });\n  }\n\n  // Skapa en loggpost\n  createLogEntry(level, message, data = null) {\n    const timestamp = new Date().toISOString();\n    const timeFormatted = new Date().toLocaleTimeString('sv-SE');\n    \n    const logEntry = {\n      id: Date.now() + Math.random(),\n      timestamp,\n      timeFormatted,\n      level,\n      message,\n      data,\n      stack: level === 'error' ? new Error().stack : null\n    };\n\n    this.logs.push(logEntry);\n    \n    // Begränsa antal loggar i minnet\n    if (this.logs.length > 1000) {\n      this.logs = this.logs.slice(-500);\n    }\n\n    this.notifyListeners();\n    return logEntry;\n  }\n\n  // INFO-loggar (blå)\n  info(message, data = null) {\n    const entry = this.createLogEntry('info', message, data);\n    console.log(`🔵 [${entry.timeFormatted}] INFO: ${message}`, data || '');\n    return entry;\n  }\n\n  // SUCCESS-loggar (grön)\n  success(message, data = null) {\n    const entry = this.createLogEntry('success', message, data);\n    console.log(`🟢 [${entry.timeFormatted}] SUCCESS: ${message}`, data || '');\n    return entry;\n  }\n\n  // WARNING-loggar (gul)\n  warn(message, data = null) {\n    const entry = this.createLogEntry('warning', message, data);\n    console.warn(`🟡 [${entry.timeFormatted}] WARNING: ${message}`, data || '');\n    return entry;\n  }\n\n  // ERROR-loggar (röd)\n  error(message, error = null, data = null) {\n    const entry = this.createLogEntry('error', message, { error, data });\n    console.error(`🔴 [${entry.timeFormatted}] ERROR: ${message}`, error || '', data || '');\n    return entry;\n  }\n\n  // DEBUG-loggar (grå)\n  debug(message, data = null) {\n    const entry = this.createLogEntry('debug', message, data);\n    console.log(`⚪ [${entry.timeFormatted}] DEBUG: ${message}`, data || '');\n    return entry;\n  }\n\n  // API-anrop loggar\n  apiCall(method, url, requestData = null) {\n    const entry = this.createLogEntry('api', `${method} ${url}`, requestData);\n    console.log(`📡 [${entry.timeFormatted}] API CALL: ${method} ${url}`, requestData || '');\n    return entry;\n  }\n\n  // API-svar loggar\n  apiResponse(method, url, status, responseData = null, error = null) {\n    const level = status >= 400 ? 'error' : status >= 300 ? 'warning' : 'success';\n    const emoji = status >= 400 ? '❌' : status >= 300 ? '⚠️' : '✅';\n    const entry = this.createLogEntry(level, `${method} ${url} → ${status}`, { responseData, error });\n    \n    if (error) {\n      console.error(`${emoji} [${entry.timeFormatted}] API ERROR: ${method} ${url} → ${status}`, error, responseData || '');\n    } else {\n      console.log(`${emoji} [${entry.timeFormatted}] API RESPONSE: ${method} ${url} → ${status}`, responseData || '');\n    }\n    return entry;\n  }\n\n  // Event-loggar\n  event(eventName, data = null) {\n    const entry = this.createLogEntry('event', `EVENT: ${eventName}`, data);\n    console.log(`⚡ [${entry.timeFormatted}] EVENT: ${eventName}`, data || '');\n    return entry;\n  }\n\n  // State-ändringar\n  stateChange(component, oldState, newState) {\n    const entry = this.createLogEntry('state', `STATE CHANGE: ${component}`, { oldState, newState });\n    console.log(`🔄 [${entry.timeFormatted}] STATE CHANGE: ${component}`, { oldState, newState });\n    return entry;\n  }\n\n  // Streaming-loggar\n  stream(message, data = null) {\n    const entry = this.createLogEntry('stream', message, data);\n    console.log(`🌊 [${entry.timeFormatted}] STREAM: ${message}`, data || '');\n    return entry;\n  }\n\n  // Performance-loggar\n  performance(operation, duration, data = null) {\n    const entry = this.createLogEntry('performance', `${operation} took ${duration}ms`, data);\n    console.log(`⏱️ [${entry.timeFormatted}] PERFORMANCE: ${operation} took ${duration}ms`, data || '');\n    return entry;\n  }\n\n  // Rensa alla loggar\n  clear() {\n    this.logs = [];\n    this.notifyListeners();\n    console.clear();\n    this.info('🧹 Loggar rensade');\n  }\n\n  // Hämta alla loggar\n  getAllLogs() {\n    return [...this.logs];\n  }\n\n  // Hämta loggar efter level\n  getLogsByLevel(level) {\n    return this.logs.filter(log => log.level === level);\n  }\n\n  // Exportera loggar som JSON\n  exportLogs() {\n    const logsJson = JSON.stringify(this.logs, null, 2);\n    const blob = new Blob([logsJson], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `food2guide-logs-${new Date().toISOString().slice(0,19)}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    this.info('📥 Loggar exporterade till fil');\n  }\n\n  // Aktivera/inaktivera loggning\n  setEnabled(enabled) {\n    this.isEnabled = enabled;\n    this.info(`🔧 Loggning ${enabled ? 'aktiverad' : 'inaktiverad'}`);\n  }\n}\n\n// Skapa global logger-instans\nconst logger = new Logger();\n\n// Fånga alla ohanterade fel\nwindow.addEventListener('error', (event) => {\n  logger.error('Ohanterat fel', event.error, {\n    message: event.message,\n    filename: event.filename,\n    lineno: event.lineno,\n    colno: event.colno\n  });\n});\n\n// Fånga alla ohanterade promise-fel\nwindow.addEventListener('unhandledrejection', (event) => {\n  logger.error('Ohanterat Promise-fel', event.reason);\n});\n\n// Logga när sidan lämnas\nwindow.addEventListener('beforeunload', () => {\n  logger.info('👋 Sida lämnas');\n});\n\n// Exportera logger\nexport default logger;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}